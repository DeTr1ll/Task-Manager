# bot.py

import os
import django

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "taskmanager.settings")  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
django.setup()

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)
from django.conf import settings
from django.contrib.auth import authenticate
from tasks.models import TelegramProfile
from asgiref.sync import sync_to_async

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
LOGIN, PASSWORD = range(2)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîê –£–≤—ñ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram", url="https://t.me/your_bot_username?start=connect")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–¶–µ–π –±–æ—Ç –Ω–∞–¥—Å–∏–ª–∞—î –≤–∞–º –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –¥–µ–¥–ª–∞–π–Ω–∏ –∑–∞–¥–∞—á –∑ —Å–∞–π—Ç—É.\n"
        "–©–æ–± –ø–æ—á–∞—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —É–≤—ñ–π–¥—ñ—Ç—å —É —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç:",
        reply_markup=reply_markup
    )

# –ó–∞–ø–∏—Ç –ª–æ–≥–∏–Ω–∞
async def ask_login(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ª–æ–≥—ñ–Ω:")
    return LOGIN

# –ü—Ä–∏–µ–º –ª–æ–≥–∏–Ω–∞
async def get_login(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["login"] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å:")
    return PASSWORD

# –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ
@sync_to_async
def authenticate_user_and_bind(login, password, chat_id):
    user = authenticate(username=login, password=password)
    if user:
        TelegramProfile.objects.update_or_create(
            user=user,
            defaults={"chat_id": chat_id},
        )
    return user

# –ü—Ä–∏–µ–º –ø–∞—Ä–æ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
async def get_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    login = context.user_data.get("login")
    password = update.message.text
    user = await sync_to_async(authenticate)(username=login, password=password)

    if user:
        chat_id = update.message.chat_id

        await sync_to_async(TelegramProfile.objects.update_or_create)(
            user=user,
            defaults={"chat_id": chat_id}
        )

        keyboard = [[KeyboardButton("‚ùå –í—ñ–¥–º–æ–≤–∏—Ç–∏—Å—è –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏")]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        await update.message.reply_text(
            f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–≤'—è–∑–∞–Ω–æ –¥–æ –∞–∫–∞—É–Ω—Ç—É *{user.username}*!",
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤—ñ—Ä–Ω—ñ –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∫–æ–º–∞–Ω–¥–æ—é /start")
    return ConversationHandler.END

# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—ã
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ñ–¥–º–æ–≤–∏ –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏
async def unsubscribe(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    try:
        profile = await sync_to_async(TelegramProfile.objects.get)(chat_id=chat_id)
        profile.chat_id = None
        await sync_to_async(profile.save)()

        keyboard = [[KeyboardButton("üîê –£–≤—ñ–π—Ç–∏")]]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

        await update.message.reply_text(
            "üîï –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–º–æ–≤–∏–ª–∏—Å—å –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏.",
            reply_markup=reply_markup
        )
    except TelegramProfile.DoesNotExist:
        await update.message.reply_text("–í–∏ —â–µ –Ω–µ –ø—ñ–¥–∫–ª—é—á–∞–ª–∏ Telegram –¥–æ –∞–∫–∞—É–Ω—Ç—É.")

def main():
    application = ApplicationBuilder().token(settings.TELEGRAM_BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^üîê –£–≤—ñ–π—Ç–∏$"), ask_login)],
        states={
            LOGIN: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_login)],
            PASSWORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_password)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(CommandHandler("start", start))
    application.add_handler(conv_handler)
    application.add_handler(MessageHandler(filters.Regex("^‚ùå –í—ñ–¥–º–æ–≤–∏—Ç–∏—Å—è –≤—ñ–¥ —Ä–æ–∑—Å–∏–ª–∫–∏$"), unsubscribe))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
