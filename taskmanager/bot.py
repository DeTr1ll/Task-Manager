# bot.py

import os
import django

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "taskmanager.settings")  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
django.setup()

from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)
from django.conf import settings
from django.contrib.auth import authenticate
from tasks.models import TelegramProfile
from asgiref.sync import sync_to_async

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
LOGIN, PASSWORD = range(2)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –ª–æ–≥—ñ–Ω:")
    return LOGIN

# –ü—Ä–∏–µ–º –ª–æ–≥–∏–Ω–∞
async def get_login(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["login"] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä –≤–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å:")
    return PASSWORD

# –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ
@sync_to_async
def authenticate_user_and_bind(login, password, chat_id):
    user = authenticate(username=login, password=password)
    if user:
        TelegramProfile.objects.update_or_create(
            user=user,
            defaults={"chat_id": chat_id},
        )
    return user

# –ü—Ä–∏–µ–º –ø–∞—Ä–æ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
async def get_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    login = context.user_data.get("login")
    password = update.message.text
    chat_id = update.message.chat_id

    user = await authenticate_user_and_bind(login, password, chat_id)

    if user:
        await update.message.reply_text(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–≤'—è–∑–∞–Ω–æ –¥–æ –∞–∫–∞—É–Ω—Ç—É {user.username}!")
    else:
        await update.message.reply_text("‚ùå –ù–µ–≤—ñ—Ä–Ω—ñ –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É –∫–æ–º–∞–Ω–¥–æ—é /start")

    return ConversationHandler.END

# –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—ã
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
    return ConversationHandler.END

def main():
    application = ApplicationBuilder().token(settings.TELEGRAM_BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            LOGIN: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_login)],
            PASSWORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_password)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()
