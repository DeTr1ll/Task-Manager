import os
import sys
from dotenv import load_dotenv
import django
from decouple import config

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path, —á—Ç–æ–±—ã Python –≤–∏–¥–µ–ª taskmanager.settings
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if BASE_DIR not in sys.path:
    sys.path.insert(0, BASE_DIR)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv(os.path.join(BASE_DIR, '.env'))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "taskmanager.settings")
django.setup()

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
from tasks.models import TelegramProfile, User
from django.utils.crypto import get_random_string

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = config('TELEGRAM_BOT_TOKEN')

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üîê –õ–æ–≥—ñ–Ω", callback_data="login")],
    ]
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –¶–µ–π –±–æ—Ç –Ω–∞–¥—Å–∏–ª–∞—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∑–∞–¥–∞—á—ñ –∑ —Å–∞–π—Ç—É.",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "login":
        token = get_random_string(16)
        await query.edit_message_text(
            f"–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç –¥–ª—è –ø—Ä–∏–≤‚Äô—è–∑–∫–∏ Telegram: https://taskino-3hzc.onrender.com/telegram/bind/{token}"
        )

application = ApplicationBuilder().token(TOKEN).build()
application.add_handler(CommandHandler("start", start))
application.add_handler(CallbackQueryHandler(button_handler))

if __name__ == "__main__":
    application.run_polling()
